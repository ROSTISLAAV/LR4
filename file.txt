1. Як виконати відправку закомічених змін на сервер? 
git push

2. Як виконати затягування змін із сервера? 
git pull

3. Як проводиться синхронізація робочої копії із затягнутими змінами? 
git merge

4. Як проводиться синхронізація робочої копії із затягнутими змінами для 
проекта з під модулями? 
go to submodule -> git merge -> go back -> git merge 

5. Де зберігаються файли при використанні розподіленої системи контролю 
версій? 
 in git folder / .git / remote

6. Які переваги дає використання розподіленої системи контролю версій?
Хороша розподілена модель, оскільки кожен розробник отримує локальне сховище з повною історією комітів,
 що робить git швидким порівняно з іншими VC. Можливості розгалуження та злиття прості (оскільки дешеві),
 хороша цілісність даних. Вони безкоштовні та з відкритим кодом, ми можемо легко завантажити вихідний код 
і внести до нього зміни. Вони можуть ефективно виконувати великі проекти. Операції push/pull швидше за прості. 
Вони економлять час, а розробники можуть отримувати та створювати запити на витяг без перемикання.. Надлишковість
 даних і реплікації. Додатки можуть бути написані багатьма мовами 

7. Які недоліки має використання розподіленої системи контролю версій ? 
Головним недоліком протоколу Git є відсутність авторизації .GIT вимагає технічної досконалості,
 а на Windows він працює повільніше. Вони мають виснажливі командні рядки для введення 
і не відстежують перейменування. Вони мають поганий графічний інтерфейс та зручність використання.
 Крім того, вони забирають багато ресурсів, що уповільнює продуктивність. GIT не підтримує перевірку 
піддерев. Для кожного проекту центральну службу потрібно налаштувати для кількох сховищ пакетів.Немає
 підтримки вікон і не відстежує порожні папки. Немає вбудованого контролю доступу та не підтримує
 двійкові файли.Вони не передбачають механізмів контролю доступу в разі безпеки. 

8. Що таке репозиторій? 
 Це місце, де зберігаються й підтримуються які-небудь дані

9. Навіщо потрібні розподілені системи?
Git відстежує зміни, які ви вносите у файли, тож у вас є запис про те, що було зроблено,
 і ви можете повернутися до певних версій, якщо вам знадобиться. Git також спрощує співпрацю, 
дозволяючи всі зміни, внесені кількома людьми, об’єднувати в одне джерело

10.Що таке оновлення робочої копії проекту? 
Оновлення вашої робочої копії шляхом внесення змін, зроблених іншими користувачами

11.Що таке фіксація змін проекту?
це фіксація (комміт), яка обмежує діапазон змін, але не належить до цього діапазону. 
 
12.Що таке модифікація проекту?
Покращення старих або додаваня нових властивостей до проекта 

13.Для чого використовується розгалуження в СКВ? 
використання гілок допоможе вам організувати робочий процес більш ефективно і досить легко

14.Що таке «Злиття версій»? 
Злиття гілок в одну

15.Що розуміють під конфліктом при роботі СКВ? 
подія, яка має місце, коли Git не може автоматично усунути розбіжності в коді між двома комітами

16.За яких умов злиття версій проходить автоматично і без конфліктів? 
якщо модифікації були лише в одній галузі

17.Чи призводить видалення та зміна одного і того ж файлу або каталогу у 
різних версіях до конфлікту при їх злитті?
так